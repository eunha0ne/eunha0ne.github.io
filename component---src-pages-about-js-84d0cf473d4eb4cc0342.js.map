{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./src/components/header/ReaderBoard.js","webpack:///./src/components/header/ThemeSwitch.js","webpack:///./src/components/header/PageHeader.js","webpack:///./src/components/layout.js","webpack:///./src/components/common/throttle.js"],"names":["IndexPage","data","className","query","ReaderBoard","props","state","progress","node","bar","React","createRef","setProgressBar","bind","setProgressBarThrottle","throttle","getCurrentProgress","distance","document","body","scrollHeight","window","innerHeight","scrollTop","documentElement","scrollingElement","this","value","requestAnimationFrame","current","style","transform","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","ref","Component","defaultProps","ThemeSwitch","isNight","isNightMode","btnItemRef","handleClick","setTheme","toggleThemeTo","result","getElementById","classList","remove","add","setState","dispatch","toggleTheme","currTheme","getElementsByTagName","onClick","nightName","dayName","defaultTheme","connect","app","PageHeader","positions","hasReader","isRolldown","isDocking","handleToggleHeader","handleToggleHeaderThrottle","getCurrentScrollPos","checkPathname","test","location","pathname","pos","curr","prev","concat","shift","push","passive","Header","classState","to","Layout","children","Fragment","siteTitle","site","siteMetadata","title","Date","getFullYear","func","limit","lastFunc","lastRan","context","args","arguments","clearTimeout","setTimeout","now","apply"],"mappings":"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","file":"component---src-pages-about-js-84d0cf473d4eb4cc0342.js","sourcesContent":["import React from \"react\"\r\n// import { Link } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport './index.scss';\r\n\r\nconst IndexPage = ({ data }) => {\r\n  return (\r\n    <Layout>\r\n      <div className=\"maintenance\">\r\n        <p>페이지 준비 중입니다.</p>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\n\r\nexport default IndexPage;\r\nexport const query = graphql`\r\n{\r\n  allMarkdownRemark(sort: {fields: [frontmatter___date], order: DESC}) {\r\n    totalCount\r\n    edges {\r\n      node {\r\n        id\r\n        frontmatter {\r\n          title\r\n          tags\r\n          date(formatString: \"YYYY년 MM월 DD일\")\r\n        }\r\n        fields {\r\n          slug\r\n        }\r\n        excerpt\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport throttle from \"../common/throttle.js\"\r\nimport \"./ReaderBoard.scss\";\r\n\r\nclass ReaderBoard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      progress: this.props.progress,\r\n    };\r\n\r\n    this.node = {\r\n      bar: React.createRef()\r\n    };\r\n\r\n    this.setProgressBar = this.setProgressBar.bind(this);\r\n    this.setProgressBarThrottle = throttle(this.setProgressBar, 200);\r\n    this.getCurrentProgress = this.getCurrentProgress.bind(this);\r\n  }\r\n\r\n  getCurrentProgress() {\r\n    const heightScroll = document.body.scrollHeight;\r\n    const heightWindow = window.innerHeight;\r\n    const distance = heightScroll - heightWindow;\r\n    const scrollTop = document.documentElement.scrollTop || document.scrollingElement.scrollTop;\r\n    const value = scrollTop < 0 ? 0 : scrollTop;\r\n\r\n    return (value / distance * 100); //.toFixed(1);\r\n  }\r\n\r\n  setProgressBar() {\r\n    const progress = this.getCurrentProgress();\r\n    const value = progress >= 0 ? 100 - progress : 0;\r\n    const fn = () => {\r\n      this.node.bar.current.style.transform = `translateX(-${ value }%)`;\r\n    };\r\n\r\n    window.requestAnimationFrame(fn);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // window.addEventListener('scroll', this.setProgressBarThrottle, { passive: true });\r\n    window.addEventListener('scroll', this.setProgressBar);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // window.removeEventListener('scroll', this.setProgressBarThrottle);\r\n    window.removeEventListener('scroll', this.setProgressBar);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"progress-bar\">\r\n        <span ref={this.node.bar}></span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReaderBoard;\r\n\r\n\r\nReaderBoard.defaultProps = {\r\n  progress: `0%`\r\n};\r\n\r\nReaderBoard.propTypes = {\r\n  progress: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport \"./ThemeSwtich.scss\";\r\nimport { connect } from 'react-redux';\r\nimport { toggleTheme } from 'src/state/app';\r\n\r\nclass ThemeSwitch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isNight: props.isNightMode\r\n    };\r\n\r\n    this.node = {\r\n      btnItemRef: React.createRef()\r\n    };\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.setTheme = this.setTheme.bind(this);\r\n    this.toggleThemeTo = this.toggleThemeTo.bind(this);\r\n  }\r\n\r\n  setTheme(result) {\r\n    this.toggleThemeTo(result, document.getElementById('___gatsby'));\r\n    this.toggleThemeTo(result, this.node.btnItemRef.current);\r\n  }\r\n\r\n  toggleThemeTo(className, node) {\r\n    const classNames = [ 'day', 'night' ];\r\n    node.classList.remove(...classNames);\r\n    node.classList.add(className);\r\n  }\r\n\r\n  handleClick() {\r\n    this.setState({ isNight: !this.state.isNight }, () => {\r\n      this.props.dispatch(toggleTheme(this.state.isNight));\r\n      const currTheme = this.state.isNight ? 'night' : 'day';\r\n      this.toggleThemeTo(currTheme, document.getElementsByTagName('body')[0]);\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    var currTheme = this.state.isNight ? 'night' : 'day';\r\n    this.toggleThemeTo(currTheme, document.getElementsByTagName('body')[0]);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"theme-switch\">\r\n        <button className=\"theme-switch__btn\" onClick={this.handleClick}>\r\n          <div\r\n            className={`theme-switch__item-wrapper ${this.state.isNight ? 'night' : 'day'}`}\r\n            ref={this.node.btnItemRef}\r\n          >\r\n            <div className=\"theme-switch__item theme-switch__item--night\">\r\n                <span className=\"moon\"></span>\r\n                {/* <span className=\"shadow\"></span> */}\r\n                <p>{this.props.nightName}</p>\r\n            </div>\r\n            <div className=\"theme-switch__item theme-switch__item--day\">\r\n                <span></span>\r\n                <p>{this.props.dayName}</p>\r\n            </div>\r\n          </div>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nThemeSwitch.defaultProps = {\r\n  nightName: 'night',\r\n  dayName: 'day',\r\n  defaultTheme: 'day'\r\n};\r\n\r\nThemeSwitch.propTypes = {\r\n  nightName: PropTypes.string,\r\n  dayName: PropTypes.string,\r\n  defaultTheme: PropTypes.string,\r\n};\r\n\r\n// export default ThemeSwitch;\r\nexport default connect(state => ({\r\n  isNightMode: state.app.isNightMode\r\n}), null)(ThemeSwitch);\r\n","import React, { Component } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Link } from \"gatsby\"\r\nimport throttle from \"../common/throttle.js\"\r\nimport ReaderBoard from \"./ReaderBoard\";\r\nimport ThemeSwitch from \"./ThemeSwitch\"\r\nimport \"./PageHeader.scss\";\r\n\r\nclass PageHeader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      positions: this.props.positions,\r\n      hasReader: this.props.hasReader,\r\n      isRolldown: this.props.isRolldown,\r\n      isDocking: this.props.isDocking\r\n    };\r\n\r\n\r\n    this.handleToggleHeader = this.handleToggleHeader.bind(this);\r\n    this.handleToggleHeaderThrottle = throttle(this.handleToggleHeader, 100);\r\n    this.getCurrentScrollPos = this.getCurrentScrollPos.bind(this);\r\n    this.checkPathname = this.checkPathname.bind(this);\r\n  }\r\n\r\n  checkPathname() {\r\n    const hasReader = /\\/20/.test(window.location.pathname);\r\n    if (this.state.hasReader !== hasReader) {\r\n      this.setState({ hasReader: hasReader });\r\n    }\r\n  }\r\n\r\n  handleToggleHeader() {\r\n    const pos = this.getCurrentScrollPos();\r\n    const isDocking = pos.curr <= 0 ? true : false;\r\n    let isRolldown = false;\r\n\r\n    if (pos.prev < pos.curr) isRolldown = false;\r\n    else if (pos.prev > pos.curr) isRolldown = true;\r\n\r\n    this.setState({\r\n      positions: pos.curr,\r\n      isRolldown: isRolldown,\r\n      isDocking: isDocking\r\n    });\r\n  }\r\n\r\n  getCurrentScrollPos() {\r\n    const scrollTop = document.documentElement.scrollTop || document.scrollingElement.scrollTop;\r\n    let curr = 0, prev = 0;\r\n    let positions = [].concat(this.state.positions);\r\n\r\n    prev = positions.shift();\r\n    positions.push(scrollTop);\r\n    curr = positions[0];\r\n\r\n    return { prev: prev, curr: curr };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.checkPathname();\r\n\r\n    window.addEventListener('scroll', this.handleToggleHeaderThrottle, { passive: true });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.handleToggleHeaderThrottle);\r\n  }\r\n\r\n  render() {\r\n    const { ...state } = this.state;\r\n    return (\r\n      <Header { ...state } />\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageHeader;\r\n\r\nconst Header = (props) => {\r\n  const { hasReader, isRolldown, isDocking } = props;\r\n  const classState = isDocking\r\n    ? 'main-header--docked'\r\n    : (isRolldown ? 'main-header--fade-in' : 'main-header--fade-out');\r\n\r\n  return (\r\n    <header className={`main-header ${classState}`}>\r\n      <div className=\"main-header__container\">\r\n        <nav className=\"menu\">\r\n          <Link className=\"menu__link\" to=\"/\">HOME</Link>\r\n          {/* <Link className=\"menu__link\" to=\"/about\">ABOUT</Link> */}\r\n          {/* <Link className=\"menu__link\" to=\"/archive\">ARCHIVE</Link> */}\r\n        </nav>\r\n        <ThemeSwitch/>\r\n      </div>\r\n      {hasReader && <ReaderBoard/>}\r\n    </header>\r\n  );\r\n}\r\n\r\nPageHeader.defaultProps = {\r\n  positions: 0,\r\n  hasReader: false,\r\n  isRolldown: false,\r\n  isDocking: true\r\n};\r\n\r\nPageHeader.propTypes = {\r\n  positions: PropTypes.number.isRequired,\r\n  hasReader: PropTypes.bool.isRequired,\r\n  isRolldown: PropTypes.bool.isRequired,\r\n  isDocking: PropTypes.bool.isRequired,\r\n};\r\n\r\n/* <참고 자료> nested cases and how to shape its proptypes.\r\nReact.PropTypes.arrayOf(\r\n  React.PropTypes.shape({\r\n    src: React.PropTypes.string.isRequired,\r\n    width: React.PropTypes.number.isRequired,\r\n    height: React.PropTypes.number.isRequired,\r\n    aspectRatio: React.PropTypes.number.isRequired,\r\n    lightboxImage: lightboxImageValidator,\r\n  })\r\n).isRequired.apply(this, arguments);\r\n*/\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\nimport PageHeader from \"src/components/header/PageHeader\";\r\nimport \"./layout.css\";\r\nimport \"./layout.scss\";\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n          description\r\n          author\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <PageHeader siteTitle={data.site.siteMetadata.title}/>\r\n      {children}\r\n      <footer>\r\n        <p>© {new Date().getFullYear()} <span>eunha0ne</span> All rights reserved.</p>\r\n        <p>Built with {`Gatsby, React, GraphQL`} </p>\r\n\r\n      </footer>\r\n    </React.Fragment>\r\n  );\r\n\r\n}\r\n\r\n/*\r\nreturn (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `}\r\n\r\n    render={(data) => {\r\n      return (\r\n        <React.Fragment>\r\n          <PageHeader siteTitle={data.site.siteMetadata.title}/>\r\n          {children}\r\n          <footer>\r\n            <p>© {new Date().getFullYear()} <span>eunha0ne</span> All rights reserved.</p>\r\n            <p>Built with {`Gatsby, React, GraphQL`} </p>\r\n\r\n          </footer>\r\n        </React.Fragment>\r\n      );\r\n    }}\r\n\r\n  />\r\n);\r\n}\r\n*/\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n/*\r\nStaticQuery.propTypes = {\r\n  data: PropTypes.shape({\r\n    site: PropTypes.shape({\r\n      siteMetadata: PropTypes.shape({\r\n        title: PropTypes.string.isRequired,\r\n      }).isRequired,\r\n    }).isRequired,\r\n  }).isRequired,\r\n};\r\n*/\r\n\r\nexport default Layout;\r\n","\r\n/**\r\n * @func  {object}\r\n * @limit {number}\r\n * @public\r\n */\r\n\r\nconst throttle = (func, limit) => {\r\n  let lastFunc;\r\n  let lastRan;\r\n\r\n  return function () {\r\n    const context = this;\r\n    const args = arguments;\r\n\r\n    if (!lastRan) {\r\n      func.apply(context, args);\r\n      lastRan = Date.now();\r\n    }\r\n\r\n    else {\r\n      clearTimeout(lastFunc);\r\n      lastFunc = setTimeout(\r\n        function () {\r\n          if ((Date.now() - lastRan) >= limit) {\r\n            func.apply(context, args);\r\n            lastRan = Date.now();\r\n          }\r\n        },\r\n        limit - (Date.now() - lastRan)\r\n      );\r\n    }\r\n\r\n  };\r\n}\r\n\r\nexport default throttle;\r\n"],"sourceRoot":""}