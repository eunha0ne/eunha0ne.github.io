{"version":3,"sources":["webpack:///./src/components/seo/index.js","webpack:///./src/pages/404.js"],"names":["SEO","description","meta","lang","keywords","title","query","detailsQuery","render","data","metaDescription","site","siteMetadata","titleTemplate","name","content","property","author","concat","length","join","defaultProps","NotFoundPage"],"mappings":"kWAKO,SAASA,EAAT,GAA4D,IAA7CC,EAA4C,EAA5CA,YAAmBC,GAAyB,EAA/BC,KAA+B,EAAzBD,MAAME,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,MACvD,OACE,YAAC,cAAD,CACEC,MAAOC,EACPC,OAAQ,SAAAC,GACN,IAAMC,EACJT,GAAeQ,EAAKE,KAAKC,aAAaX,YACxC,OACE,YAAC,IAAD,CACEI,MAAOA,EACPQ,cAAa,QAAUJ,EAAKE,KAAKC,aAAaP,MAC9CH,KAAM,CACJ,CACEY,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAASV,GAEX,CACEW,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASN,EAAKE,KAAKC,aAAaK,QAElC,CACEH,KAAK,gBACLC,QAASV,GAEX,CACES,KAAK,sBACLC,QAASL,IAGVQ,OACCd,EAASe,OAAS,EACd,CACEL,KAAK,WACLC,QAASX,EAASgB,KAAT,OAEX,IAELF,OAAOhB,IAEV,oBAAMC,KAAK,SArDnB,SA6DJH,EAAIqB,aAAe,CACjBlB,KAAK,KACLD,KAAM,GACNE,SAAU,IAWZ,IAAMG,EAAY,c,kCClFlB,yDAaee,UARM,kBACnB,YAAC,IAAD,KACE,YAAC,IAAD,CAAKjB,MAAM,mBACX,mCACA","file":"component---src-pages-404-js-2fd3aaa6a18c2b61fa17.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Helmet from 'react-helmet';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\n\r\nexport function SEO({ description, lang, meta, keywords, title }) {\r\n  return (\r\n    <StaticQuery\r\n      query={detailsQuery}\r\n      render={data => {\r\n        const metaDescription =\r\n          description || data.site.siteMetadata.description;\r\n        return (\r\n          <Helmet\r\n            title={title}\r\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\r\n            meta={[\r\n              {\r\n                name: `description`,\r\n                content: metaDescription\r\n              },\r\n              {\r\n                property: `og:title`,\r\n                content: title\r\n              },\r\n              {\r\n                property: `og:description`,\r\n                content: metaDescription\r\n              },\r\n              {\r\n                property: `og:type`,\r\n                content: `website`\r\n              },\r\n              {\r\n                name: `twitter:card`,\r\n                content: `summary`\r\n              },\r\n              {\r\n                name: `twitter:creator`,\r\n                content: data.site.siteMetadata.author\r\n              },\r\n              {\r\n                name: `twitter:title`,\r\n                content: title\r\n              },\r\n              {\r\n                name: `twitter:description`,\r\n                content: metaDescription\r\n              }\r\n            ]\r\n              .concat(\r\n                keywords.length > 0\r\n                  ? {\r\n                      name: `keywords`,\r\n                      content: keywords.join(`, `)\r\n                    }\r\n                  : []\r\n              )\r\n              .concat(meta)}\r\n          >\r\n            <html lang=\"ko\" />\r\n          </Helmet>\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `ko`,\r\n  meta: [],\r\n  keywords: []\r\n};\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired\r\n};\r\n\r\nconst detailsQuery = graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport { Layout } from '~/components/layout';\r\nimport { SEO } from '~/components/seo';\r\n\r\nconst NotFoundPage = () => (\r\n  <Layout>\r\n    <SEO title=\"404: Not found\" />\r\n    <h1>NOT FOUND</h1>\r\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n  </Layout>\r\n);\r\n\r\nexport default NotFoundPage;\r\n"],"sourceRoot":""}