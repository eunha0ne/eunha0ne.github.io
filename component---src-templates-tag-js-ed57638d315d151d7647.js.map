{"version":3,"sources":["webpack:///./src/components/header/ReaderBoard.js","webpack:///./src/components/header/ThemeSwitch.js","webpack:///./src/components/header/PageHeader.js","webpack:///./src/components/layout.js","webpack:///./src/components/common/throttle.js","webpack:///./src/components/Tags/Tags.js","webpack:///./src/components/IndexContents/IndexContents.js","webpack:///./src/components/IndexContents/index.js","webpack:///./src/components/AllTags/AllTags.js","webpack:///./src/templates/tag.js"],"names":["ReaderBoard","props","state","progress","node","bar","React","createRef","setProgressBar","bind","getCurrentProgress","distance","document","body","scrollHeight","window","innerHeight","scrollTop","documentElement","scrollingElement","this","value","requestAnimationFrame","current","style","transform","componentDidMount","addEventListener","passive","componentWillUnmount","removeEventListener","render","className","ref","Component","defaultProps","ThemeSwitch","handleClick","setThemeClass","name","nodeClasses","classList","remove","add","getThemeName","reverseMode","isNightMode","toggleAppTheme","themeSwitchClick","isModeChanged","onClick","connect","appTheme","dispatch","bool","PageHeader","hasReader","isRolldown","isDocking","handleToggleHeader","handleToggleHeaderThrottle","throttle","getCurrentScrollPos","checkPathname","test","location","pathname","setState","pos","isOffsetTop","curr","prev","currScrollTop","scrollTops","concat","shift","push","Header","classState","to","isThemeSwitchClick","Layout","children","data","Fragment","siteTitle","site","siteMetadata","title","Date","getFullYear","func","limit","lastFunc","lastRan","context","args","arguments","clearTimeout","setTimeout","now","apply","Tags","frontmatter","tags","map","tag","idx","key","IndexContents","allMarkdownRemark","edges","fields","slug","date","excerpt","AllTags","group","fieldValue","totalCount","pageContext","query"],"mappings":"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","file":"component---src-templates-tag-js-ed57638d315d151d7647.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import throttle from '../common/throttle.js';\r\n\r\nimport './ReaderBoard.scss';\r\n\r\nclass ReaderBoard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      progress: this.props.progress\r\n    };\r\n\r\n    this.node = {\r\n      bar: React.createRef()\r\n    };\r\n\r\n    this.setProgressBar = this.setProgressBar.bind(this);\r\n    this.getCurrentProgress = this.getCurrentProgress.bind(this);\r\n    // this.setProgressBarThrottle = throttle(this.setProgressBar, 200);\r\n  }\r\n\r\n  getCurrentProgress() {\r\n    const heightScroll = document.body.scrollHeight;\r\n    const heightWindow = window.innerHeight;\r\n    const distance = heightScroll - heightWindow;\r\n    const scrollTop =\r\n      document.documentElement.scrollTop || document.scrollingElement.scrollTop;\r\n    const value = scrollTop < 0 ? 0 : scrollTop;\r\n\r\n    return (value / distance) * 100;\r\n  }\r\n\r\n  setProgressBar() {\r\n    const progress = this.getCurrentProgress();\r\n    const value = progress >= 0 ? 100 - progress : 0;\r\n    const fn = () => {\r\n      this.node.bar.current.style.transform = `translateX(-${value}%)`;\r\n    };\r\n\r\n    window.requestAnimationFrame(fn);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('scroll', this.setProgressBar, { passive: true });\r\n    // window.addEventListener('scroll', this.setProgressBarThrottle, { passive: true });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.setProgressBar);\r\n    // window.removeEventListener('scroll', this.setProgressBarThrottle);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"progress-bar\">\r\n        <span ref={this.node.bar}></span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReaderBoard.defaultProps = {\r\n  progress: `0%`\r\n};\r\n\r\nReaderBoard.propTypes = {\r\n  progress: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ReaderBoard;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { toggleAppTheme, themeSwitchClick } from 'src/actions';\r\n\r\nimport './ThemeSwtich.scss';\r\n\r\nclass ThemeSwitch extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.setThemeClass = this.setThemeClass.bind(this);\r\n  }\r\n\r\n  setThemeClass(name) {\r\n    const classNames = ['day', 'night'];\r\n    const nodeClasses = document.body.classList;\r\n\r\n    nodeClasses.remove(...classNames);\r\n    nodeClasses.add(name);\r\n  }\r\n\r\n  getThemeName(reverseMode) {\r\n    if (reverseMode === undefined || reverseMode === null) {\r\n      reverseMode = this.props.isNightMode;\r\n    }\r\n\r\n    return reverseMode ? 'night' : 'day';\r\n  }\r\n\r\n  handleClick() {\r\n    const { isNightMode, toggleAppTheme, themeSwitchClick } = this.props;\r\n    const reverseMode = !isNightMode;\r\n\r\n    toggleAppTheme(reverseMode);\r\n    themeSwitchClick(true);\r\n    this.setThemeClass(this.getThemeName(reverseMode));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setThemeClass(this.getThemeName());\r\n  }\r\n\r\n  render() {\r\n    const { isNightMode, isModeChanged } = this.props;\r\n\r\n    return (\r\n      <div className=\"theme-switch\">\r\n        <button className=\"theme-switch__btn\" onClick={this.handleClick}>\r\n          <div\r\n            className={`theme-switch__displayer ${\r\n              isNightMode ? 'is-night' : 'is-day'\r\n            }`}\r\n          >\r\n            <div className=\"theme-switch__item theme-switch__item--night\">\r\n              <span>night</span>\r\n            </div>\r\n            <div className=\"theme-switch__item theme-switch__item--day\">\r\n              <span>day</span>\r\n            </div>\r\n          </div>\r\n        </button>\r\n\r\n        {!isModeChanged && (\r\n          <div className=\"theme-switch__guider\">\r\n            <span>Change your mood!</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isNightMode: state.appTheme.isNightMode,\r\n  isModeChanged: state.appTheme.isModeChanged\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleAppTheme: bool => dispatch(toggleAppTheme(bool)),\r\n  themeSwitchClick: bool => dispatch(themeSwitchClick(bool))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeSwitch);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { themeSwitchClick } from 'src/actions';\r\nimport { Link } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\nimport throttle from '../common/throttle.js';\r\n\r\nimport ReaderBoard from './ReaderBoard';\r\nimport ThemeSwitch from './ThemeSwitch';\r\n\r\nimport './PageHeader.scss';\r\n\r\nclass PageHeader extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      scrollTop: this.props.scrollTop,\r\n      hasReader: this.props.hasReader,\r\n      isRolldown: this.props.isRolldown,\r\n      isDocking: this.props.isDocking\r\n    };\r\n\r\n    this.handleToggleHeader = this.handleToggleHeader.bind(this);\r\n    this.handleToggleHeaderThrottle = throttle(this.handleToggleHeader, 100);\r\n    this.getCurrentScrollPos = this.getCurrentScrollPos.bind(this);\r\n    this.checkPathname = this.checkPathname.bind(this);\r\n  }\r\n\r\n  checkPathname() {\r\n    const hasReader = /\\/20/.test(window.location.pathname);\r\n    if (this.state.hasReader !== hasReader) {\r\n      this.setState({ hasReader: hasReader });\r\n    }\r\n  }\r\n\r\n  handleToggleHeader() {\r\n    const pos = this.getCurrentScrollPos();\r\n    const isOffsetTop = pos.curr <= 0;\r\n    let isRolldown = false;\r\n\r\n    if (pos.prev < pos.curr) {\r\n      isRolldown = false;\r\n    } else if (pos.prev > pos.curr) {\r\n      isRolldown = true;\r\n    }\r\n\r\n    this.setState(\r\n      {\r\n        scrollTop: pos.curr,\r\n        isRolldown: isRolldown,\r\n        isDocking: isOffsetTop\r\n      },\r\n      () => {\r\n        const { isDocking } = this.state;\r\n        this.props.themeSwitchClick(!isDocking);\r\n      }\r\n    );\r\n  }\r\n\r\n  getCurrentScrollPos() {\r\n    const currScrollTop =\r\n      document.documentElement.scrollTop || document.scrollingElement.scrollTop;\r\n    let scrollTops = [].concat(this.state.scrollTop);\r\n    let curr = 0;\r\n    let prev = 0;\r\n\r\n    prev = scrollTops.shift();\r\n    scrollTops.push(currScrollTop);\r\n    curr = scrollTops[0];\r\n\r\n    return { prev: prev, curr: curr };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.checkPathname();\r\n\r\n    window.addEventListener('scroll', this.handleToggleHeaderThrottle, {\r\n      passive: true\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.handleToggleHeaderThrottle);\r\n  }\r\n\r\n  render() {\r\n    const { ...state } = this.state;\r\n\r\n    return <Header {...state} />;\r\n  }\r\n}\r\n\r\nconst Header = props => {\r\n  const { hasReader, isRolldown, isDocking } = props;\r\n  const classState = isDocking\r\n    ? 'main-header--docked'\r\n    : isRolldown\r\n    ? 'main-header--fade-in'\r\n    : 'main-header--fade-out';\r\n\r\n  return (\r\n    <header className={`main-header ${classState}`}>\r\n      <div className=\"main-header__container\">\r\n        <nav className=\"menu\">\r\n          <Link className=\"menu__link\" to=\"/\">\r\n            HOME\r\n          </Link>\r\n          {/* <Link className=\"menu__link\" to=\"/about\">ABOUT</Link> */}\r\n          {/* <Link className=\"menu__link\" to=\"/archive\">ARCHIVE</Link> */}\r\n        </nav>\r\n        <ThemeSwitch />\r\n      </div>\r\n      {hasReader && <ReaderBoard />}\r\n    </header>\r\n  );\r\n};\r\n\r\nPageHeader.defaultProps = {\r\n  scrollTop: 0,\r\n  hasReader: false,\r\n  isRolldown: false,\r\n  isDocking: true\r\n};\r\n\r\nPageHeader.propTypes = {\r\n  scrollTop: PropTypes.number.isRequired,\r\n  hasReader: PropTypes.bool.isRequired,\r\n  isRolldown: PropTypes.bool.isRequired,\r\n  isDocking: PropTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isThemeSwitchClick: state.appTheme.isThemeSwitchClick\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  themeSwitchClick: bool => dispatch(themeSwitchClick(bool))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PageHeader);\r\n\r\n/* <참고 자료> nested cases and how to shape its proptypes.\r\nReact.PropTypes.arrayOf(\r\n  React.PropTypes.shape({\r\n    src: React.PropTypes.string.isRequired,\r\n    width: React.PropTypes.number.isRequired,\r\n    height: React.PropTypes.number.isRequired,\r\n    aspectRatio: React.PropTypes.number.isRequired,\r\n    lightboxImage: lightboxImageValidator,\r\n  })\r\n  ).isRequired.apply(this, arguments);\r\n*/\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\nimport PageHeader from \"src/components/header/PageHeader\";\r\nimport \"./layout.css\";\r\nimport \"./layout.scss\";\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n          description\r\n          author\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <PageHeader siteTitle={data.site.siteMetadata.title}/>\r\n      {children}\r\n      <footer>\r\n        <p>© {new Date().getFullYear()} <span>eunha0ne</span> All rights reserved.</p>\r\n        <p>Built with {`Gatsby, React, GraphQL`} </p>\r\n\r\n      </footer>\r\n    </React.Fragment>\r\n  );\r\n\r\n}\r\n\r\n/*\r\nreturn (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `}\r\n\r\n    render={(data) => {\r\n      return (\r\n        <React.Fragment>\r\n          <PageHeader siteTitle={data.site.siteMetadata.title}/>\r\n          {children}\r\n          <footer>\r\n            <p>© {new Date().getFullYear()} <span>eunha0ne</span> All rights reserved.</p>\r\n            <p>Built with {`Gatsby, React, GraphQL`} </p>\r\n\r\n          </footer>\r\n        </React.Fragment>\r\n      );\r\n    }}\r\n\r\n  />\r\n);\r\n}\r\n*/\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n/*\r\nStaticQuery.propTypes = {\r\n  data: PropTypes.shape({\r\n    site: PropTypes.shape({\r\n      siteMetadata: PropTypes.shape({\r\n        title: PropTypes.string.isRequired,\r\n      }).isRequired,\r\n    }).isRequired,\r\n  }).isRequired,\r\n};\r\n*/\r\n\r\nexport default Layout;\r\n","\r\n/**\r\n * @func  {object}\r\n * @limit {number}\r\n * @public\r\n */\r\n\r\nconst throttle = (func, limit) => {\r\n  let lastFunc;\r\n  let lastRan;\r\n\r\n  return function () {\r\n    const context = this;\r\n    const args = arguments;\r\n\r\n    if (!lastRan) {\r\n      func.apply(context, args);\r\n      lastRan = Date.now();\r\n    }\r\n\r\n    else {\r\n      clearTimeout(lastFunc);\r\n      lastFunc = setTimeout(\r\n        function () {\r\n          if ((Date.now() - lastRan) >= limit) {\r\n            func.apply(context, args);\r\n            lastRan = Date.now();\r\n          }\r\n        },\r\n        limit - (Date.now() - lastRan)\r\n      );\r\n    }\r\n\r\n  };\r\n}\r\n\r\nexport default throttle;\r\n","import React from 'react';\r\nimport { Link } from \"gatsby\"\r\nimport './Tags.scss'\r\n\r\nconst Tags = ({ props }) => {\r\n  const node = props;\r\n  return (\r\n    <div className=\"tags\">\r\n    {node.frontmatter.tags && node.frontmatter.tags.map((tag, idx) => (\r\n      <Link className=\"tags__item\" key={`tag-${idx}`} to={`/${tag}`}>\r\n        {tag}\r\n      </Link>\r\n    ))}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Tags;\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\";\r\nimport Tags from 'src/components/Tags';\r\nimport \"./IndexContents.scss\";\r\n\r\nconst IndexContents = ({ data }) => {\r\n  return (\r\n    <section className=\"index-contents\">\r\n      {data.allMarkdownRemark.edges.map(({ node }, idx) => {\r\n      return (\r\n        <article key={`node-${idx}`} className=\"index-post\">\r\n          <div className=\"index-post__head\">\r\n            { /* 이미지 들어갈 자리 */ }\r\n          </div>\r\n          <div className=\"index-post__body\">\r\n            <Link to={node.fields.slug} >\r\n              <h3><span>{node.frontmatter.title}</span></h3>\r\n              <span>{node.frontmatter.date}</span>\r\n              <hr/>\r\n              <p>{node.excerpt}</p>\r\n            </Link>\r\n            <Tags props={node} />\r\n          </div>\r\n        </article>\r\n      );\r\n    })}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default IndexContents;\r\n","export { default } from './IndexContents';\r\n","import React from 'react';\r\nimport { Link, graphql, useStaticQuery } from \"gatsby\"\r\n// import Layout from 'src/components/layout';\r\nimport './AllTags.scss'\r\n\r\nconst AllTags = () => {\r\n  const data = useStaticQuery(graphql`\r\n   query {\r\n     allMarkdownRemark(\r\n       limit: 2000) {\r\n       group(field: frontmatter___tags) {\r\n         fieldValue\r\n         totalCount\r\n       }\r\n     }\r\n   }\r\n  `);\r\n  const { group } = data.allMarkdownRemark;\r\n\r\n  return (\r\n    <div className=\"tags all-tags\">\r\n    {group.map((tag, idx) => (\r\n      <Link key={`tag-${idx}`} to={`/${tag.fieldValue}`} className=\"tags__item\" >\r\n        {tag.fieldValue} {`(${tag.totalCount})`}\r\n      </Link>\r\n    ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllTags;\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Layout from 'src/components/layout';\r\nimport IndexContents from 'src/components/IndexContents';\r\nimport AllTags from 'src/components/AllTags';\r\nimport './tag.scss';\r\n\r\nconst Tags = props => {\r\n  const { data, pageContext } = props;\r\n  return (\r\n    <Layout>\r\n      <main className=\"index-view tags-view\">\r\n        <AllTags />\r\n        <p className=\"tag-name\">{pageContext.tag}</p>\r\n        <IndexContents data={data} />\r\n      </main>\r\n    </Layout>\r\n  );\r\n};\r\n\r\n// export default connect(state => {\r\n//   return ({ isNightMode: state.app.isNightMode });\r\n// }, null)(Tags);\r\nexport default Tags;\r\n\r\nexport const query = graphql`\r\n  query TagsQuery($tag: String!) {\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { eq: $tag } } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            tags\r\n            date(formatString: \"YYYY년 MM월 DD일\")\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n          excerpt(pruneLength: 90, truncate: true)\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}