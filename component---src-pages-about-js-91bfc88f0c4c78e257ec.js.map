{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./src/components/header/ReaderBoard.js","webpack:///./src/components/header/ThemeSwitch.js","webpack:///./src/components/header/PageHeader.js","webpack:///./src/components/layout.js","webpack:///./src/components/common/throttle.js"],"names":["IndexPage","data","className","query","ReaderBoard","props","state","progress","node","bar","React","createRef","setProgressBar","bind","getCurrentProgress","distance","document","body","scrollHeight","window","innerHeight","scrollTop","documentElement","scrollingElement","this","value","requestAnimationFrame","current","style","transform","componentDidMount","addEventListener","passive","componentWillUnmount","removeEventListener","render","ref","Component","defaultProps","ThemeSwitch","handleClick","setThemeClass","name","nodeClasses","classList","remove","add","getThemeName","reverseMode","isNightMode","toggleAppTheme","themeSwitchClick","isModeChanged","onClick","connect","appTheme","dispatch","bool","PageHeader","hasReader","isRolldown","isDocking","handleToggleHeader","handleToggleHeaderThrottle","throttle","getCurrentScrollPos","checkPathname","test","location","pathname","setState","pos","isOffsetTop","curr","prev","currScrollTop","scrollTops","concat","shift","push","Header","classState","to","isThemeSwitchClick","Layout","children","Fragment","siteTitle","site","siteMetadata","title","Date","getFullYear","func","limit","lastFunc","lastRan","context","args","arguments","clearTimeout","setTimeout","now","apply"],"mappings":"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","file":"component---src-pages-about-js-91bfc88f0c4c78e257ec.js","sourcesContent":["import React from \"react\"\r\n// import { Link } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport './index.scss';\r\n\r\nconst IndexPage = ({ data }) => {\r\n  return (\r\n    <Layout>\r\n      <div className=\"maintenance\">\r\n        <p>페이지 준비 중입니다.</p>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\n\r\nexport default IndexPage;\r\nexport const query = graphql`\r\n{\r\n  allMarkdownRemark(sort: {fields: [frontmatter___date], order: DESC}) {\r\n    totalCount\r\n    edges {\r\n      node {\r\n        id\r\n        frontmatter {\r\n          title\r\n          tags\r\n          date(formatString: \"YYYY년 MM월 DD일\")\r\n        }\r\n        fields {\r\n          slug\r\n        }\r\n        excerpt\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import throttle from '../common/throttle.js';\r\n\r\nimport './ReaderBoard.scss';\r\n\r\nclass ReaderBoard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      progress: this.props.progress\r\n    };\r\n\r\n    this.node = {\r\n      bar: React.createRef()\r\n    };\r\n\r\n    this.setProgressBar = this.setProgressBar.bind(this);\r\n    this.getCurrentProgress = this.getCurrentProgress.bind(this);\r\n    // this.setProgressBarThrottle = throttle(this.setProgressBar, 200);\r\n  }\r\n\r\n  getCurrentProgress() {\r\n    const heightScroll = document.body.scrollHeight;\r\n    const heightWindow = window.innerHeight;\r\n    const distance = heightScroll - heightWindow;\r\n    const scrollTop =\r\n      document.documentElement.scrollTop || document.scrollingElement.scrollTop;\r\n    const value = scrollTop < 0 ? 0 : scrollTop;\r\n\r\n    return (value / distance) * 100;\r\n  }\r\n\r\n  setProgressBar() {\r\n    const progress = this.getCurrentProgress();\r\n    const value = progress >= 0 ? 100 - progress : 0;\r\n    const fn = () => {\r\n      this.node.bar.current.style.transform = `translateX(-${value}%)`;\r\n    };\r\n\r\n    window.requestAnimationFrame(fn);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('scroll', this.setProgressBar, { passive: true });\r\n    // window.addEventListener('scroll', this.setProgressBarThrottle, { passive: true });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.setProgressBar);\r\n    // window.removeEventListener('scroll', this.setProgressBarThrottle);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"progress-bar\">\r\n        <span ref={this.node.bar}></span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReaderBoard.defaultProps = {\r\n  progress: `0%`\r\n};\r\n\r\nReaderBoard.propTypes = {\r\n  progress: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ReaderBoard;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { toggleAppTheme, themeSwitchClick } from 'src/actions';\r\n\r\nimport './ThemeSwtich.scss';\r\n\r\nclass ThemeSwitch extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.setThemeClass = this.setThemeClass.bind(this);\r\n  }\r\n\r\n  setThemeClass(name) {\r\n    const classNames = ['day', 'night'];\r\n    const nodeClasses = document.body.classList;\r\n\r\n    nodeClasses.remove(...classNames);\r\n    nodeClasses.add(name);\r\n  }\r\n\r\n  getThemeName(reverseMode) {\r\n    if (reverseMode === undefined || reverseMode === null) {\r\n      reverseMode = this.props.isNightMode;\r\n    }\r\n\r\n    return reverseMode ? 'night' : 'day';\r\n  }\r\n\r\n  handleClick() {\r\n    const { isNightMode, toggleAppTheme, themeSwitchClick } = this.props;\r\n    const reverseMode = !isNightMode;\r\n\r\n    toggleAppTheme(reverseMode);\r\n    themeSwitchClick(true);\r\n    this.setThemeClass(this.getThemeName(reverseMode));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setThemeClass(this.getThemeName());\r\n  }\r\n\r\n  render() {\r\n    const { isNightMode, isModeChanged } = this.props;\r\n\r\n    return (\r\n      <div className=\"theme-switch\">\r\n        <button className=\"theme-switch__btn\" onClick={this.handleClick}>\r\n          <div\r\n            className={`theme-switch__displayer ${\r\n              isNightMode ? 'is-night' : 'is-day'\r\n            }`}\r\n          >\r\n            <div className=\"theme-switch__item theme-switch__item--night\">\r\n              <span>night</span>\r\n            </div>\r\n            <div className=\"theme-switch__item theme-switch__item--day\">\r\n              <span>day</span>\r\n            </div>\r\n          </div>\r\n        </button>\r\n\r\n        {!isModeChanged && (\r\n          <div className=\"theme-switch__guider\">\r\n            <span>Change your mood!</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isNightMode: state.appTheme.isNightMode,\r\n  isModeChanged: state.appTheme.isModeChanged\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleAppTheme: bool => dispatch(toggleAppTheme(bool)),\r\n  themeSwitchClick: bool => dispatch(themeSwitchClick(bool))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeSwitch);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { themeSwitchClick } from 'src/actions';\r\nimport { Link } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\nimport throttle from '../common/throttle.js';\r\n\r\nimport ReaderBoard from './ReaderBoard';\r\nimport ThemeSwitch from './ThemeSwitch';\r\n\r\nimport './PageHeader.scss';\r\n\r\nclass PageHeader extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      scrollTop: this.props.scrollTop,\r\n      hasReader: this.props.hasReader,\r\n      isRolldown: this.props.isRolldown,\r\n      isDocking: this.props.isDocking\r\n    };\r\n\r\n    this.handleToggleHeader = this.handleToggleHeader.bind(this);\r\n    this.handleToggleHeaderThrottle = throttle(this.handleToggleHeader, 100);\r\n    this.getCurrentScrollPos = this.getCurrentScrollPos.bind(this);\r\n    this.checkPathname = this.checkPathname.bind(this);\r\n  }\r\n\r\n  checkPathname() {\r\n    const hasReader = /\\/20/.test(window.location.pathname);\r\n    if (this.state.hasReader !== hasReader) {\r\n      this.setState({ hasReader: hasReader });\r\n    }\r\n  }\r\n\r\n  handleToggleHeader() {\r\n    const pos = this.getCurrentScrollPos();\r\n    const isOffsetTop = pos.curr <= 0;\r\n    let isRolldown = false;\r\n\r\n    if (pos.prev < pos.curr) {\r\n      isRolldown = false;\r\n    } else if (pos.prev > pos.curr) {\r\n      isRolldown = true;\r\n    }\r\n\r\n    this.setState(\r\n      {\r\n        scrollTop: pos.curr,\r\n        isRolldown: isRolldown,\r\n        isDocking: isOffsetTop\r\n      },\r\n      () => {\r\n        const { isDocking } = this.state;\r\n        this.props.themeSwitchClick(!isDocking);\r\n      }\r\n    );\r\n  }\r\n\r\n  getCurrentScrollPos() {\r\n    const currScrollTop =\r\n      document.documentElement.scrollTop || document.scrollingElement.scrollTop;\r\n    let scrollTops = [].concat(this.state.scrollTop);\r\n    let curr = 0;\r\n    let prev = 0;\r\n\r\n    prev = scrollTops.shift();\r\n    scrollTops.push(currScrollTop);\r\n    curr = scrollTops[0];\r\n\r\n    return { prev: prev, curr: curr };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.checkPathname();\r\n\r\n    window.addEventListener('scroll', this.handleToggleHeaderThrottle, {\r\n      passive: true\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.handleToggleHeaderThrottle);\r\n  }\r\n\r\n  render() {\r\n    const { ...state } = this.state;\r\n\r\n    return <Header {...state} />;\r\n  }\r\n}\r\n\r\nconst Header = props => {\r\n  const { hasReader, isRolldown, isDocking } = props;\r\n  const classState = isDocking\r\n    ? 'main-header--docked'\r\n    : isRolldown\r\n    ? 'main-header--fade-in'\r\n    : 'main-header--fade-out';\r\n\r\n  return (\r\n    <header className={`main-header ${classState}`}>\r\n      <div className=\"main-header__container\">\r\n        <nav className=\"menu\">\r\n          <Link className=\"menu__link\" to=\"/\">\r\n            HOME\r\n          </Link>\r\n          {/* <Link className=\"menu__link\" to=\"/about\">ABOUT</Link> */}\r\n          {/* <Link className=\"menu__link\" to=\"/archive\">ARCHIVE</Link> */}\r\n        </nav>\r\n        <ThemeSwitch />\r\n      </div>\r\n      {hasReader && <ReaderBoard />}\r\n    </header>\r\n  );\r\n};\r\n\r\nPageHeader.defaultProps = {\r\n  scrollTop: 0,\r\n  hasReader: false,\r\n  isRolldown: false,\r\n  isDocking: true\r\n};\r\n\r\nPageHeader.propTypes = {\r\n  scrollTop: PropTypes.number.isRequired,\r\n  hasReader: PropTypes.bool.isRequired,\r\n  isRolldown: PropTypes.bool.isRequired,\r\n  isDocking: PropTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isThemeSwitchClick: state.appTheme.isThemeSwitchClick\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  themeSwitchClick: bool => dispatch(themeSwitchClick(bool))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PageHeader);\r\n\r\n/* <참고 자료> nested cases and how to shape its proptypes.\r\nReact.PropTypes.arrayOf(\r\n  React.PropTypes.shape({\r\n    src: React.PropTypes.string.isRequired,\r\n    width: React.PropTypes.number.isRequired,\r\n    height: React.PropTypes.number.isRequired,\r\n    aspectRatio: React.PropTypes.number.isRequired,\r\n    lightboxImage: lightboxImageValidator,\r\n  })\r\n  ).isRequired.apply(this, arguments);\r\n*/\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\nimport PageHeader from \"src/components/header/PageHeader\";\r\nimport \"./layout.css\";\r\nimport \"./layout.scss\";\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n          description\r\n          author\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <PageHeader siteTitle={data.site.siteMetadata.title}/>\r\n      {children}\r\n      <footer>\r\n        <p>© {new Date().getFullYear()} <span>eunha0ne</span> All rights reserved.</p>\r\n        <p>Built with {`Gatsby, React, GraphQL`} </p>\r\n\r\n      </footer>\r\n    </React.Fragment>\r\n  );\r\n\r\n}\r\n\r\n/*\r\nreturn (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `}\r\n\r\n    render={(data) => {\r\n      return (\r\n        <React.Fragment>\r\n          <PageHeader siteTitle={data.site.siteMetadata.title}/>\r\n          {children}\r\n          <footer>\r\n            <p>© {new Date().getFullYear()} <span>eunha0ne</span> All rights reserved.</p>\r\n            <p>Built with {`Gatsby, React, GraphQL`} </p>\r\n\r\n          </footer>\r\n        </React.Fragment>\r\n      );\r\n    }}\r\n\r\n  />\r\n);\r\n}\r\n*/\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n/*\r\nStaticQuery.propTypes = {\r\n  data: PropTypes.shape({\r\n    site: PropTypes.shape({\r\n      siteMetadata: PropTypes.shape({\r\n        title: PropTypes.string.isRequired,\r\n      }).isRequired,\r\n    }).isRequired,\r\n  }).isRequired,\r\n};\r\n*/\r\n\r\nexport default Layout;\r\n","\r\n/**\r\n * @func  {object}\r\n * @limit {number}\r\n * @public\r\n */\r\n\r\nconst throttle = (func, limit) => {\r\n  let lastFunc;\r\n  let lastRan;\r\n\r\n  return function () {\r\n    const context = this;\r\n    const args = arguments;\r\n\r\n    if (!lastRan) {\r\n      func.apply(context, args);\r\n      lastRan = Date.now();\r\n    }\r\n\r\n    else {\r\n      clearTimeout(lastFunc);\r\n      lastFunc = setTimeout(\r\n        function () {\r\n          if ((Date.now() - lastRan) >= limit) {\r\n            func.apply(context, args);\r\n            lastRan = Date.now();\r\n          }\r\n        },\r\n        limit - (Date.now() - lastRan)\r\n      );\r\n    }\r\n\r\n  };\r\n}\r\n\r\nexport default throttle;\r\n"],"sourceRoot":""}