{"data":{"markdownRemark":{"html":"<h1>til</h1>\n<hr>\n<p>Array.from() 메서드는 Array-like(유사 배열) 또는 Iterable(이터러블: 순회 가능한) 객체를 얇게 복사해서 새로운 배열로 반환한다. (ES6)</p>\n<blockquote>\n<p>Array.from(arrayLike[, mapFn[, thisArg]])</p>\n</blockquote>\n<ul>\n<li>arrayLike: 배열로 변환하고자 하는유사 배열 객체나 반복 가능한 객체</li>\n<li>mapFn(Opt): 배열의 모든 요소에 대해 호출할 맵핑 함수</li>\n<li>thisArg(Opt): mapFn 실행 시에 this로 사용할 값</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// [1] 기본 사용</span>\nArray<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">'foo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [\"f\", \"o\", \"o\"]</span>\n\n\n<span class=\"token comment\">// [2] 화살표 함수와의 조합</span>\n<span class=\"token comment\">// Array.from() 메서드는 두번째 매개변수로 map 함수를 사용한다.</span>\nArray<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">x</span> <span class=\"token operator\">=></span> x <span class=\"token operator\">+</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// [2, 4, 6]</span>\n\n<span class=\"token comment\">// from() 메서드의 기본 length 속성은 1이다.</span>\n<span class=\"token comment\">// 이를 변형해서 맵 함수와 연계하면 원하는 길이와 인자를 갖는 배열을 생성할 수 있다.</span>\nArray<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> length<span class=\"token punctuation\">:</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">v<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [0, 1, 2, 3, 4]</span>\n\n\n<span class=\"token comment\">// [3] 시퀀스 생성기</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">range</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">start<span class=\"token punctuation\">,</span> stop<span class=\"token punctuation\">,</span> step</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> length<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>stop <span class=\"token operator\">-</span> start<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> step <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">_<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> start <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">*</span> step<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// [0, 1, 2, 3, 4]</span>\n<span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// [1, 3, 5, 7, 9]</span>\n\n<span class=\"token comment\">// A부터 Z까지 알파벳 생성하기</span>\n<span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">.</span><span class=\"token function\">charCodeAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Z'</span><span class=\"token punctuation\">.</span><span class=\"token function\">charCodeAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span> <span class=\"token operator\">=></span> String<span class=\"token punctuation\">.</span><span class=\"token function\">fromCharCode</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// [\"A\", \"B\", \"C\", ..., \"Z\"]</span></code></pre></div>\n<h2>References</h2>\n<hr>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from\">MDN</a></li>\n</ul>","frontmatter":{"title":"Today I Learned　","tags":["개인학습","2019"],"date":"28 June, 2019"},"headings":[{"value":"til","depth":1},{"value":"References","depth":2}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2019/06/28/TIL/","prev":null,"next":{"node":{"headings":[{"value":"컨퍼런스 참석 후기"}],"fields":{"slug":"/2019/06/23/note/"},"frontmatter":{"title":"GDG FRONT-ENDGAME 후기","tags":["컨퍼런스","후기","2019"]}}}}}